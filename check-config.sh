#!/bin/bash

# Script para verificar configura√ß√£o do projeto Granulay
# Uso: ./check-config.sh

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üîç Verificando configura√ß√£o do projeto Granulay${NC}"
echo "================================================"

# Verificar se estamos na pasta correta
if [ ! -f "Granulay.xcodeproj/project.pbxproj" ]; then
    echo -e "${RED}‚ùå Erro: Arquivo de projeto n√£o encontrado${NC}"
    echo "Execute este script na pasta raiz do projeto"
    exit 1
fi

echo -e "${GREEN}‚úÖ Projeto encontrado${NC}"

# Verificar certificados de assinatura
echo -e "\n${YELLOW}üîê Verificando certificados de assinatura...${NC}"
echo "Certificados dispon√≠veis:"
security find-identity -v -p codesigning

# Verificar se tem certificado de distribui√ß√£o
if security find-identity -v -p codesigning | grep -q "Apple Distribution"; then
    echo -e "${GREEN}‚úÖ Certificado Apple Distribution encontrado${NC}"
else
    echo -e "${RED}‚ùå Certificado Apple Distribution n√£o encontrado${NC}"
    echo "   Voc√™ precisa instalar o certificado de distribui√ß√£o"
fi

# Verificar se tem certificado de desenvolvimento
if security find-identity -v -p codesigning | grep -q "Apple Development"; then
    echo -e "${GREEN}‚úÖ Certificado Apple Development encontrado${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Certificado Apple Development n√£o encontrado${NC}"
fi

# Verificar configura√ß√µes do Info.plist
echo -e "\n${YELLOW}üìÑ Verificando Info.plist...${NC}"
if [ -f "Granulay/Info.plist" ]; then
    echo -e "${GREEN}‚úÖ Info.plist encontrado${NC}"
    
    # Verificar vers√£o
    VERSION=$(plutil -extract CFBundleShortVersionString raw Granulay/Info.plist 2>/dev/null || echo "N/A")
    BUILD=$(plutil -extract CFBundleVersion raw Granulay/Info.plist 2>/dev/null || echo "N/A")
    BUNDLE_ID=$(plutil -extract CFBundleIdentifier raw Granulay/Info.plist 2>/dev/null || echo "N/A")
    
    echo "   Vers√£o: $VERSION"
    echo "   Build: $BUILD"
    echo "   Bundle ID: $BUNDLE_ID"
    
    # Verificar se n√£o √© vers√£o trial
    if [[ "$VERSION" == *"trial"* ]] || [[ "$VERSION" == *"beta"* ]] || [[ "$BUILD" == *"-"* ]]; then
        echo -e "${RED}‚ùå Vers√£o parece ser trial/beta${NC}"
        echo "   Atualize para vers√£o de produ√ß√£o (ex: 1.0.0)"
    else
        echo -e "${GREEN}‚úÖ Vers√£o parece estar correta para App Store${NC}"
    fi
else
    echo -e "${RED}‚ùå Info.plist n√£o encontrado${NC}"
fi

# Verificar entitlements
echo -e "\n${YELLOW}üõ°Ô∏è  Verificando entitlements...${NC}"
if [ -f "Granulay/Granulay.entitlements" ]; then
    echo -e "${GREEN}‚úÖ Arquivo de entitlements encontrado${NC}"
    
    # Verificar sandbox
    if plutil -p Granulay/Granulay.entitlements 2>/dev/null | grep -q '"com.apple.security.app-sandbox" => true'; then
        echo -e "${GREEN}‚úÖ App Sandbox habilitado${NC}"
    else
        echo -e "${RED}‚ùå App Sandbox n√£o habilitado${NC}"
    fi
    
    # Verificar permiss√µes potencialmente problem√°ticas
    if plutil -extract "com.apple.security.cs.allow-jit" raw Granulay/Granulay.entitlements 2>/dev/null | grep -q "true"; then
        echo -e "${YELLOW}‚ö†Ô∏è  JIT habilitado - pode precisar de justificativa${NC}"
    fi
    
    if plutil -extract "com.apple.security.cs.disable-library-validation" raw Granulay/Granulay.entitlements 2>/dev/null | grep -q "true"; then
        echo -e "${YELLOW}‚ö†Ô∏è  Library validation desabilitada - pode precisar de justificativa${NC}"
    fi
else
    echo -e "${RED}‚ùå Arquivo de entitlements n√£o encontrado${NC}"
fi

# Verificar configura√ß√µes do projeto
echo -e "\n${YELLOW}‚öôÔ∏è  Verificando configura√ß√µes do projeto...${NC}"

# Verificar team ID
if grep -q "DEVELOPMENT_TEAM = TB76NB7VWG" Granulay.xcodeproj/project.pbxproj; then
    echo -e "${GREEN}‚úÖ Development Team configurado (TB76NB7VWG)${NC}"
else
    echo -e "${RED}‚ùå Development Team n√£o configurado corretamente${NC}"
fi

# Verificar assinatura de c√≥digo
if grep -q '"CODE_SIGN_IDENTITY\[sdk=macosx\*\]" = "Apple Distribution"' Granulay.xcodeproj/project.pbxproj; then
    echo -e "${GREEN}‚úÖ Assinatura configurada para Apple Distribution${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Assinatura n√£o configurada para Apple Distribution${NC}"
    echo "   Verifique se est√° usando Apple Distribution para Release"
fi

# Verificar bundle identifier
if grep -q "com.granulay.app" Granulay.xcodeproj/project.pbxproj; then
    echo -e "${GREEN}‚úÖ Bundle identifier configurado (com.granulay.app)${NC}"
else
    echo -e "${RED}‚ùå Bundle identifier n√£o encontrado${NC}"
fi

# Verificar arquivos necess√°rios
echo -e "\n${YELLOW}üìÅ Verificando arquivos necess√°rios...${NC}"

files_to_check=(
    "ExportOptions.plist"
    "build-appstore.sh"
    "APP_STORE_GUIDE.md"
)

for file in "${files_to_check[@]}"; do
    if [ -f "$file" ]; then
        echo -e "${GREEN}‚úÖ $file${NC}"
    else
        echo -e "${RED}‚ùå $file n√£o encontrado${NC}"
    fi
done

# Verificar Xcode
echo -e "\n${YELLOW}üõ†Ô∏è  Verificando Xcode...${NC}"
if command -v xcodebuild &> /dev/null; then
    XCODE_VERSION=$(xcodebuild -version | head -n 1)
    echo -e "${GREEN}‚úÖ $XCODE_VERSION${NC}"
else
    echo -e "${RED}‚ùå Xcode n√£o encontrado${NC}"
fi

# Resumo
echo -e "\n${BLUE}üìã Resumo da Verifica√ß√£o${NC}"
echo "================================================"
echo -e "${GREEN}‚úÖ${NC} = Configurado corretamente"
echo -e "${YELLOW}‚ö†Ô∏è${NC}  = Aten√ß√£o necess√°ria"
echo -e "${RED}‚ùå${NC} = Problema que precisa ser corrigido"

echo -e "\n${BLUE}üí° Pr√≥ximos passos:${NC}"
echo "1. Corrija os problemas marcados com ‚ùå"
echo "2. Revise os itens marcados com ‚ö†Ô∏è"
echo "3. Execute ./build-appstore.sh para criar o build"
echo "4. Consulte APP_STORE_GUIDE.md para instru√ß√µes detalhadas"